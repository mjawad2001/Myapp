import { WithHttp } from '../novu.interface';
export class Subscribers extends WithHttp {
    async list(page) {
        return await this.http.get(`/subscribers`, {
            params: {
                page,
            },
        });
    }
    async get(subscriberId) {
        return await this.http.get(`/subscribers/${subscriberId}`);
    }
    async identify(subscriberId, data) {
        return await this.http.post(`/subscribers`, {
            subscriberId,
            ...data,
        });
    }
    async update(subscriberId, data) {
        return await this.http.put(`/subscribers/${subscriberId}`, {
            ...data,
        });
    }
    async getPreference(subscriberId) {
        return await this.http.get(`/subscribers/${subscriberId}/preferences`);
    }
    async updatePreference(subscriberId, templateId, data) {
        return await this.http.patch(`/subscribers/${subscriberId}/preferences/${templateId}`, {
            ...data,
        });
    }
    async setCredentials(subscriberId, providerId, credentials) {
        return await this.http.put(`/subscribers/${subscriberId}/credentials`, {
            providerId,
            credentials: {
                ...credentials,
            },
        });
    }
    async unsetCredentials(subscriberId, providerId) {
        return await this.http.put(`/subscribers/${subscriberId}/credentials`, {
            providerId,
            credentials: { webhookUrl: undefined },
        });
    }
    async delete(subscriberId) {
        return await this.http.delete(`/subscribers/${subscriberId}`);
    }
    async getNotificationsFeed(subscriberId, params) {
        return await this.http.get(`/subscribers/${subscriberId}/notifications/feed`, {
            params,
        });
    }
    async getUnseenCount(subscriberId, seen) {
        return await this.http.get(`/subscribers/${subscriberId}/notifications/unseen`, {
            params: {
                seen,
            },
        });
    }
    async markMessageSeen(subscriberId, messageId) {
        return await this.http.post(`/subscribers/${subscriberId}/messages/${messageId}/seen`);
    }
    async markMessageActionSeen(subscriberId, messageId, type) {
        return await this.http.post(`/subscribers/${subscriberId}/messages/${messageId}/actions/${type}`);
    }
}
