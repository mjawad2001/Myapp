import { WithHttp } from '../novu.interface';
const BASE_PATH = '/topics';
export class Topics extends WithHttp {
    async addSubscribers(topicKey, data) {
        return await this.http.post(`${BASE_PATH}/${topicKey}/subscribers`, data);
    }
    async removeSubscribers(topicKey, data) {
        return await this.http.post(`${BASE_PATH}/${topicKey}/subscribers/removal`, data);
    }
    async list(data) {
        return await this.http.get(BASE_PATH, {
            params: {
                page: data.page,
                ...(data?.pageSize && { pageSize: data.pageSize }),
            },
        });
    }
    async delete(topicKey) {
        return await this.http.delete(`${BASE_PATH}/${topicKey}`);
    }
    async get(topicKey) {
        return await this.http.get(`${BASE_PATH}/${topicKey}`);
    }
    async getSubscriber(topicKey, externalSubscriberId) {
        return await this.http.get(`${BASE_PATH}/${topicKey}/subscribers/${externalSubscriberId}`);
    }
    async rename(topicKey, newName) {
        return await this.http.patch(`${BASE_PATH}/${topicKey}`, {
            name: newName,
        });
    }
    async create(data) {
        return await this.http.post(BASE_PATH, {
            key: data.key,
            name: data.name,
        });
    }
}
