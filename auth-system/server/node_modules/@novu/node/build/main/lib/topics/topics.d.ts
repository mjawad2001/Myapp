import { ExternalSubscriberId, TopicKey, TopicName } from '@novu/shared';
import { ITopicPayload, ITopicPaginationPayload, ITopics, ITopicSubscribersPayload } from './topic.interface';
import { WithHttp } from '../novu.interface';
export declare class Topics extends WithHttp implements ITopics {
    addSubscribers(topicKey: TopicKey, data: ITopicSubscribersPayload): Promise<import("axios").AxiosResponse<any, any>>;
    removeSubscribers(topicKey: TopicKey, data: ITopicSubscribersPayload): Promise<import("axios").AxiosResponse<any, any>>;
    list(data: ITopicPaginationPayload): Promise<import("axios").AxiosResponse<any, any>>;
    delete(topicKey: TopicKey): Promise<import("axios").AxiosResponse<any, any>>;
    get(topicKey: TopicKey): Promise<import("axios").AxiosResponse<any, any>>;
    getSubscriber(topicKey: TopicKey, externalSubscriberId: ExternalSubscriberId): Promise<import("axios").AxiosResponse<any, any>>;
    rename(topicKey: TopicKey, newName: TopicName): Promise<import("axios").AxiosResponse<any, any>>;
    create(data: ITopicPayload): Promise<import("axios").AxiosResponse<any, any>>;
}
//# sourceMappingURL=topics.d.ts.map