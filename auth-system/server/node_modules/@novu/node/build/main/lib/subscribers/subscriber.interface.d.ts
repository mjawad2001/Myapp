import { ChannelTypeEnum, IChannelCredentials, ISubscriberPayload } from '@novu/shared';
export { ISubscriberPayload };
export interface ISubscribers {
    list(page: number): any;
    get(subscriberId: string): any;
    identify(subscriberId: string, data: ISubscriberPayload): any;
    update(subscriberId: string, data: ISubscriberPayload): any;
    delete(subscriberId: string): any;
    setCredentials(subscriberId: string, providerId: string, credentials: IChannelCredentials): any;
    unsetCredentials(subscriberId: string, providerId: string): any;
    getPreference(subscriberId: string): any;
    updatePreference(subscriberId: string, templateId: string, data: IUpdateSubscriberPreferencePayload): any;
    getNotificationsFeed(subscriberId: string, params: IGetSubscriberNotificationFeedParams): any;
    getUnseenCount(subscriberId: string, seen: boolean): any;
    markMessageSeen(subscriberId: string, messageId: string): any;
    markMessageActionSeen(subscriberId: string, messageId: string, type: string): any;
}
export interface IUpdateSubscriberPreferencePayload {
    channel?: {
        type: ChannelTypeEnum;
        enabled: boolean;
    };
    enabled?: boolean;
}
export interface IGetSubscriberNotificationFeedParams {
    page?: number;
    feedIdentifier?: string;
    seen?: boolean;
}
//# sourceMappingURL=subscriber.interface.d.ts.map