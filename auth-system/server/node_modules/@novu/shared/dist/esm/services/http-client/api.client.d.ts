export interface IParamObject {
    [key: string]: string | string[] | number | boolean;
}
export interface IPaginatedResponse<T = unknown> {
    data: T[];
    hasMore: boolean;
    totalCount: number;
    pageSize: number;
    page: number;
}
export declare class HttpClient {
    private backendUrl;
    private axiosClient;
    constructor(backendUrl: string);
    setAuthorizationToken(token: string): void;
    disposeAuthorizationToken(): void;
    getFullResponse(url: string, params?: IParamObject): Promise<any>;
    get(url: string, params?: IParamObject): Promise<any>;
    post(url: string, body?: {}): Promise<any>;
    patch(url: string, body?: {}): Promise<any>;
    delete(url: string, body?: {}): Promise<any>;
}
//# sourceMappingURL=api.client.d.ts.map